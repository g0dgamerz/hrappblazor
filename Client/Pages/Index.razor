@page "/"
@using HRAppMudBlazorProject.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.ComponentModel.DataAnnotations
@inject HttpClient _httpClient
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<PageTitle>Index</PageTitle>

<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12" sm="6" md="4">
            <!-- Earnings (Monthly) Card Example -->
            <div class="col-xl-12 col-md-6 mb-4">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                    Department (Total)
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">@departments.Count</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-calendar fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <!-- Earnings (Monthly) Card Example -->
            <div class="col-xl-12 col-md-6 mb-4">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                    Employee (Total)
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">@employees.Count</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-calendar fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <!-- Earnings (Monthly) Card Example -->
            <div class="col-xl-12 col-md-6 mb-4">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                    Designation (Total)
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">@designations.Count</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-calendar fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </MudItem>
        <div>
    <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" @bind-SelectedIndex="Index1" XAxisLabels="@departmentList" Width="100%" Height="350px"></MudChart>
       </div>
    <MudText Typo="Typo.h6">Salary Chart: @Index1</MudText>

        <MudItem xs="12" sm="6" md="4">
            <MudChart ChartType="ChartType.Donut" Width="500px" Height="300px" InputData="@datas" InputLabels="@genders">
                <CustomGraphics>
                    <text class="donut-inner-text" x="47%" y="35%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="2">Total</text>
                    <text class="donut-inner-text" x="47%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="5">@datas.Sum().ToString()</text>
                </CustomGraphics>
            </MudChart>
        </MudItem>

        <MudItem xs="12" sm="6" md="4">
            
        </MudItem>

        <MudItem xs="12" sm="6" md="4">
        </MudItem>

    </MudGrid>
</MudContainer>

@code {
    public double[] datas;
    public string[] genders = { "Male","Female","Others"};
    public string[] departmentList;
    //List<DashboardData> datas = new();

    private List<Employee> employees = new();
    private List<Department> departments = new();
    private List<Designation> designations = new();
    private int Index1 = -1; //default value cannot be 0 -> first selectedindex is 0.

    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "United States", Data = new double[] { 35, 50, 90, 80, 70 } },
        //new ChartSeries() { Name = "Germany", Data = new double[] { 19, 24, 35, 13, 28, 15, 13, 16, 31 } },
        //new ChartSeries() { Name = "Sweden", Data = new double[] { 8, 6, 11, 13, 4, 16, 10, 16, 18 } },
    };

    //public string[] XAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            departments = await Http.GetFromJsonAsync<List<Department>>("api/Departments");
            designations = await Http.GetFromJsonAsync<List<Designation>>("api/Designations");
            employees = await Http.GetFromJsonAsync<List<Employee>>("api/Employees");
            datas = await Http.GetFromJsonAsync<double[]>("api/dashboard");
            departmentList = await Http.GetFromJsonAsync<string[]>("api/bargraph");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

    }
    

    //string[] data =  await Http.GetFromJsonAsync<>("api/Dashboard");
}